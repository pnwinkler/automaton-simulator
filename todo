IMMEDIATE GOALS
Anti-alias ellipses

Anti-alias line things that connect states



INTERMEDIATE GOALS
- get lines connecting states to indicate directionality
- get lines connecting states to not strike state center, but its edge instead
- give states visible names
- let user create and modify transition rules
- infer automaton state
- have automaton logic output be correctly displayed
- finalize and debug interactions between UI and underlying automaton logic

LONG-TERM GOALS
- allow for the moving, creation, deletion of states and transition rules
- if "toggle solution" still exists, determine what to do with it
- consider allowing curved arrows (and make them point correctly to distant states)
- consider allowing user to rename states
- implement toggleSolution, so that the program provides automatically generated solutions for the active regex.

STRETCH GOALS
- Implement a requirements file, such that absent/invalid libraries trigger a response
- Consider quality of life / improvement features, such as:
  TIER 1:
   more attractive UI elements
  TIER 2:


FINAL GOALS
- test on clean Ubuntu and Windows VMs
- polish documentation


TEMP: Useful links for me:
- explains the relative coordinate system
https://www.qtcentre.org/threads/19457-QGraphicsItem-pos()-and-setpos()
    '''
    # simply using sceneboundingrect instead of boundingrect is incorrect, and will fuck up upon rotations
    # instead...

    You should save boundingRect(), pos() and transformation matrix to have a complete set of data needed to
    recreate the item. sceneBoundingRect() will return wrong values once you start rotating items

    # presumably the "transformation matrix" is a set of values (offsets?) used to convert from one coord system
    to another
    '''